function tf = isMATLABReleaseOlderThan(releaseNumber)

    arguments
        releaseNumber (1,1) string {mustBeValidReleaseNumber}
        % Todo stage and update
    end
    
    if startsWith(releaseNumber, 'r')
        releaseNumber{1}(1) = "R";
    end

    if verLessThan('matlab','9.9')  %#ok<VERLESSMATLAB>
        % Source: https://se.mathworks.com/support/requirements/previous-releases.html
        releaseToVersionMap = struct(...
            'R2020a', '9.8', ...
            'R2019b', '9.7', ...
            'R2019a', '9.6', ...
            'R2018b', '9.5', ...
            'R2018a', '9.4', ...
            'R2017b', '9.3', ...
            'R2017a', '9.2', ...
            'R2016b', '9.1', ...
            'R2016a', '9.0', ...
            'R2015b', '8.6', ...
            'R2015a', '8.5', ...
            'R2014b', '8.4', ...
            'R2014a', '8.3', ...
            'R2013b', '8.2', ...
            'R2013a', '8.1', ...
            'R2012b', '8.0', ...
            'R2012a', '7.14', ...
            'R2011b', '7.13', ...
            'R2011a', '7.12', ...
            'R2010b', '7.11', ...
            'R2010a', '7.10', ...
            'R2009b', '7.9', ...
            'R2009a', '7.8', ...
            'R2008b', '7.7', ...
            'R2008a', '7.6', ...
            'R2007b', '7.5', ...
            'R2007a', '7.4', ...
            'R2006b', '7.3', ...
            'R2006a', '7.2' ...
        );

        % Convert the struct to a containers.Map
        releaseToVersionMap = containers.Map(fieldnames(releaseToVersionMap), ...
            struct2cell(releaseToVersionMap));
        if isKey(releaseToVersionMap, releaseNumber)
            tf = verLessThan('matlab', releaseToVersionMap(releaseNumber));
        else
            error('MatBox:ReleaseNumberNotSupported', ...
                'This function does not have information about the provided release number (%s)', releaseNumber)
        end

    else % Use builtin, introduced in R2020b
        tf = isMATLABReleaseOlderThan(releaseNumber);
    end
end

function mustBeValidReleaseNumber(releaseNumber)
    % mustBeValidReleaseNumber Validate that input is a valid MATLAB release number
    %   mustBeValidReleaseNumber(releaseNumber) throws an error if the
    %   input does not match the format "R20XXa" or "R20XXb".

    % Define the release number pattern
    pattern = '^R20\d{2}[ab]$';
    
    % Validate against the pattern
    if isempty(regexpi(releaseNumber, pattern, 'once'))
        error("Release number must follow the format 'R20XXa' or 'R20XXb'.")
    end
end
