name: Reusable Release Workflow

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: false
        description: 'Version number in major.minor.patch format (for manual triggers)'
      ref_name:
        type: string
        required: false
        description: 'GitHub ref name (for tag triggers)'
      code_directory:
        type: string
        default: 'code'
        description: 'Directory containing source code'
      tools_directory:
        type: string
        default: 'tools'
        description: 'Directory containing tools'
      matlab_versions:
        type: string
        default: '["R2023a", "R2023b", "R2024a", "R2024b"]'
        description: 'JSON array of MATLAB versions to test'
      python_versions:
        type: string
        default: '{"R2023a": "3.10", "R2023b": "3.11", "R2024a": "3.11", "R2024b": "3.12"}'
        description: 'JSON object mapping MATLAB versions to Python versions'
    secrets:
      DEPLOY_KEY:
        required: true
        description: 'SSH deploy key for pushing to protected branches'

jobs:
  validate_version:
    runs-on: ubuntu-latest
    outputs:
      version_number: ${{ steps.validate.outputs.version_number }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Check for MLToolboxInfo.json
        run: |
          if [ ! -f "${{ inputs.tools_directory }}/MLToolboxInfo.json" ]; then
            echo "Error: MLToolboxInfo.json not found in ${{ inputs.tools_directory }} directory"
            echo "This file is required for the release workflow to function properly"
            exit 1
          fi
          echo "MLToolboxInfo.json found in ${{ inputs.tools_directory }} directory"
        
      - name: Validate version
        id: validate
        uses: ehennestad/matbox/.github/actions/validate-version@make-release-workflow-reusable
        with:
          version: ${{ inputs.version }}
          ref_name: ${{ inputs.ref_name }}

  test:
    name: Run MATLAB tests (${{ matrix.MATLABVersion }})
    needs: [validate_version]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        MATLABVersion: ${{ fromJSON(inputs.matlab_versions) }}
        include:
          - MATLABVersion: R2023a
            pythonVersion: '3.10'
          - MATLABVersion: R2023b
            pythonVersion: '3.11'
          - MATLABVersion: R2024a
            pythonVersion: '3.11'
          - MATLABVersion: R2024b
            pythonVersion: '3.12'

    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pythonVersion }}
          
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{ matrix.MATLABVersion }}

      - name: Install MatBox
        uses: ehennestad/matbox/.github/actions/install-matbox@v0.9

      # Runs all tests in the project.  Put results in a version specific subdirectory
      - name: Run tests
        uses: ehennestad/matbox/.github/actions/test-code@make-release-workflow-reusable
        with:
          code_directory: ${{ inputs.code_directory }}
          tools_directory: ${{ inputs.tools_directory }}
          report_subdirectory: ${{ matrix.MATLABVersion }}
          create_badge: false

      # Save the contents of the report directory from each release into an artifact.
      - name: Save report directory
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports-${{ matrix.MATLABVersion }}
          path: docs/reports

  release:
    needs: [test, validate_version]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository using deploy key
        uses: actions/checkout@v4
        with:
          ref: refs/heads/main
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
             
      - name: Install MatBox
        uses: ehennestad/matbox/.github/actions/install-matbox@make-release-workflow-reusable
      
      # Download test reports
      - uses: actions/download-artifact@v4
        with:
          pattern: reports-*
          path: docs/reports
          merge-multiple: true
          
      # Generate badge
      - name: Generate tested with badge
        uses: ehennestad/matbox/.github/actions/update-badges@make-release-workflow-reusable
        with:
          version_number: ${{ needs.validate_version.outputs.version_number }}
          tools_directory: ${{ inputs.tools_directory }}
          
      # Package toolbox
      - name: Package toolbox
        id: package
        uses: ehennestad/matbox/.github/actions/package-toolbox@make-release-workflow-reusable
        with:
          version_number: ${{ needs.validate_version.outputs.version_number }}
          code_directory: ${{ inputs.code_directory }}
          tools_directory: ${{ inputs.tools_directory }}

      # Save the MLTBX.
      - name: Save packaged toolbox
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.toolbox_name }}${{ steps.package.outputs.version_underscore }}.mltbx
          path: ${{ steps.package.outputs.mltbx_path }}
          
      # Create GitHub release
      - name: Create GitHub release
        uses: ehennestad/matbox/.github/actions/create-github-release@make-release-workflow-reusable
        with:
          version_number: ${{ needs.validate_version.outputs.version_number }}
          mltbx_path: ${{ steps.package.outputs.mltbx_path }}
          version_underscore: ${{ steps.package.outputs.version_underscore }}
