name: Run Tests

on:
  workflow_call:
    inputs:
      code_directory:
        type: string
        default: 'code'
        description: 'Directory containing source code'
      tools_directory:
        type: string
        default: 'tools'
        description: 'Directory containing tools'
      matlab_products:
        description: Optional list of MATLAB products to install.
        type: string
        default: ''
      needs_python:
        type: boolean
        default: false
        description: 'Whether Python is needed for testing (controls if Python versions are included in test matrix)'
      matrix_json:
        type: string
        required: true
        description: 'JSON string containing the test matrix from build-matrix job'

jobs:
  test:
    name: Run MATLAB tests (${{ matrix.MATLABVersion }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(inputs.matrix_json) }}

    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        if: ${{ inputs.needs_python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pythonVersion }}

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{ matrix.MATLABVersion }}
          products: ${{ inputs.matlab_products }}

      - name: Install MatBox
        uses: ehennestad/matbox/.github/actions/install-matbox@make-release-workflow-reusable

      # Run all tests in the project.  Put results in a version specific subdirectory
      - name: Run tests
        uses: ehennestad/matbox/.github/actions/test-code@make-release-workflow-reusable
        with:
          code_directory: ${{ inputs.code_directory }}
          tools_directory: ${{ inputs.tools_directory }}
          report_subdirectory: ${{ matrix.MATLABVersion }}
          create_badge: false

      # Save the contents of the report directory from each release into an artifact.
      - name: Save report directory
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports-${{ matrix.MATLABVersion }}
          path: docs/reports
